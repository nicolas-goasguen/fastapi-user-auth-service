name: ${PROJECT_NAME}-${ENVIRONMENT}

services:

  db:
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - custom-network
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mail:
    image: maildev/maildev
    restart: always
    environment:
      - MAILDEV_INCOMING_USER=${SMTP_USER}
      - MAILDEV_INCOMING_PASS=${SMTP_PASSWORD}
    networks:
      - custom-network
    ports:
      - "${SMTP_WEB_PORT:-}:1080"

  api:
    build: ./api
    restart: always
    env_file:
      - .env.${ENVIRONMENT}
    depends_on:
      db:
        condition: service_healthy
      mail:
        condition: service_started
    networks:
      - custom-network
    ports:
      - "${EXPOSED_API_PORT:-}:80"

networks:
  custom-network:
    driver: bridge

volumes:
  pgdata:
